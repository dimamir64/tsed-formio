{"version":3,"file":"inputTags.component-f7cd833e.js","sources":["../../../../node_modules/lodash/_baseFindIndex.js","../../../../node_modules/lodash/_baseIsNaN.js","../../../../node_modules/lodash/_strictIndexOf.js","../../../../node_modules/lodash/_baseIndexOf.js","../../../../node_modules/lodash/_arrayIncludes.js","../../../../node_modules/lodash/_arrayIncludesWith.js","../../../../node_modules/lodash/_baseUniq.js","../../../../node_modules/lodash/uniq.js","../../../react-formio/src/components/input-tags/inputTags.component.tsx"],"sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","import Choices from \"@formio/choices.js\";\nimport uniq from \"lodash/uniq\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { FormControl, FormControlProps } from \"../form-control/formControl.component\";\n\nexport interface InputTagsProps<T = any> extends Omit<FormControlProps, \"description\" | \"prefix\" | \"suffix\"> {\n  value?: T;\n  onChange?: (name: string, value: T) => void;\n  placeholder?: string;\n\n  [key: string]: any;\n}\n\nexport function InputTags({ name, value = [], label, onChange, required, description, prefix, suffix, ...props }: InputTagsProps) {\n  const ref: any = useRef();\n\n  useEffect(() => {\n    const instance = new Choices(ref.current, {\n      delimiter: \",\",\n      editItems: true,\n      removeItemButton: true\n    });\n\n    instance.setValue([].concat(value, []));\n\n    instance.passedElement.element.addEventListener(\"addItem\", (event: any) => {\n      onChange && onChange(name, uniq(value.concat(event.detail.value)));\n    });\n\n    instance.passedElement.element.addEventListener(\"removeItem\", (event: any) => {\n      onChange &&\n        onChange(\n          name,\n          value.filter((v: string) => v !== event.detail.value)\n        );\n    });\n\n    return () => {\n      instance.destroy();\n    };\n  }, []);\n\n  return (\n    <FormControl name={name} label={label} required={required} description={description} prefix={prefix} suffix={suffix}>\n      <input ref={ref} type='text' {...props} id={name} required={required} />\n    </FormControl>\n  );\n}\n\nInputTags.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.array,\n  required: PropTypes.bool,\n  onChange: PropTypes.func\n};\n"],"names":["baseFindIndex","array","predicate","fromIndex","fromRight","length","index","_baseFindIndex","baseIsNaN","value","_baseIsNaN","strictIndexOf","_strictIndexOf","require$$0","require$$1","require$$2","baseIndexOf","_baseIndexOf","arrayIncludes","_arrayIncludes","arrayIncludesWith","comparator","_arrayIncludesWith","SetCache","cacheHas","require$$3","createSet","require$$4","setToArray","require$$5","LARGE_ARRAY_SIZE","baseUniq","iteratee","includes","isCommon","result","seen","set","outer","computed","seenIndex","_baseUniq","uniq","uniq_1","InputTags","name","label","onChange","required","description","prefix","suffix","props","ref","useRef","useEffect","instance","Choices","event","v","FormControl","jsx","PropTypes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}